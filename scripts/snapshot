#!/usr/bin/env python
# -*- coding: utf-8 -*-
################################################################################
##
## Copyright 2012 - 2017, GÃ¶teborg Bit Factory.
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included
## in all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
## OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.
##
## http://www.opensource.org/licenses/mit-license.php
##
################################################################################

import sys
import flod

################################################################################
# Reduces a result event to a summarized digest event.
def main(event_file):
  event = flod.Event()
  event.load(event_file)
  config = flod.Config()

#  # Publish the report.
#  publish_event = flod.Event()
#  publish_event.header('from', this)
#  publish_event.header('to', that)
#
#  central = flod.Central()
#  central.post('publish', publish_event)

################################################################################
# Entry point.  Checks only that there is one command line argument.
if __name__ == "__main__":
  """Flod2 hook script for building a snapshot tarball from a clean build event."""

  if len(sys.argv) != 2:
    print "\nUsage: snapshot <clean-event-file>\n\n"
    sys.exit(1)

  try:
    main(sys.argv[1])
  except Exception as msg:
    print('Error:', msg)

